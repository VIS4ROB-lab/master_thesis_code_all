[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:[m[K In member function â€˜[01m[Kvirtual std::vector<okvis::ceres::dynenv::Cluster> okvis::ceres::dynenv::SimpleCluster::computecluster(std::vector<std::pair<okvis::MapPoint*, double> >&, std::vector<std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> > >)[m[Kâ€™:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:213:50:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
         for(unsigned candidate_i(0); candidate_i < num_in_cluster; ++candidate_i){
[01;32m[K                                                  ^[m[K
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:228:52:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
           for(unsigned candidate_i(0); candidate_i < num_in_cluster; ++candidate_i){
[01;32m[K                                                    ^[m[K
In file included from [01m[K/usr/include/c++/5/functional:55:0[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
/usr/include/c++/5/tuple: In instantiation of â€˜[01m[Kstruct std::tuple_element<1ul, std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1> > >[m[Kâ€™:
[01m[K/usr/include/c++/5/tuple:755:12:[m[K   recursively required from â€˜[01m[Kstruct std::tuple_element<2ul, std::tuple<double, Eigen::Matrix<double, 2, 1, 0, 2, 1> > >[m[Kâ€™
[01m[K/usr/include/c++/5/tuple:755:12:[m[K   required from â€˜[01m[Kstruct std::tuple_element<3ul, std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> > >[m[Kâ€™
[01m[K/usr/include/c++/5/tuple:769:69:[m[K   required by substitution of â€˜[01m[Ktemplate<long unsigned int __i, class _Tp> using __tuple_element_t = typename std::tuple_element::type [with long unsigned int __i = 3ul; _Tp = std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >][m[Kâ€™
[01m[K/usr/include/c++/5/tuple:838:5:[m[K   required by substitution of â€˜[01m[Ktemplate<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Elements ...> >& std::get(const std::tuple<_Elements ...>&) [with long unsigned int __i = 3ul; _Elements = {Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1>}][m[Kâ€™
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K   required from here
[01m[K/usr/include/c++/5/tuple:755:12:[m[K [01;31m[Kerror: [m[Kinvalid use of incomplete type â€˜[01m[Kstruct std::tuple_element<0ul, std::tuple<> >[m[Kâ€™
     struct tuple_element<__i, tuple<_Head, _Tail...> >
[01;32m[K            ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:38:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/utility:85:11:[m[K [01;36m[Knote: [m[Kdeclaration of â€˜[01m[Kstruct std::tuple_element<0ul, std::tuple<> >[m[Kâ€™
     class tuple_element;
[01;32m[K           ^[m[K
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kget(const value_type&)[m[Kâ€™
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:38:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/utility:147:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:147:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::pair<_Tp1, _Tp2>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:38:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/utility:152:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:152:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::pair<_Tp1, _Tp2>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:38:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/utility:157:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:157:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::pair<_Tp1, _Tp2>[m[Kâ€™
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:38:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/utility:166:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)
     get(pair<_Tp, _Up>& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:166:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/utility:171:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)
     get(const pair<_Tp, _Up>& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:171:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/utility:176:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)
     get(pair<_Tp, _Up>&& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:176:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/utility:181:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)
     get(pair<_Up, _Tp>& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:181:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/utility:186:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)
     get(const pair<_Up, _Tp>& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:186:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/utility:191:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)
     get(pair<_Up, _Tp>&& __p) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/utility:191:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/5/tuple:39:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/array:280:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)
     get(array<_Tp, _Nm>& __arr) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/array:280:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::array<_Tp, _Nm>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:39:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/array:289:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/array:289:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::array<_Tp, _Nm>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/tuple:39:0[m[K,
                 from [01m[K/usr/include/c++/5/functional:55[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/array:297:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)
     get(const array<_Tp, _Nm>& __arr) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/array:297:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::array<_Tp, _Nm>[m[Kâ€™
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/functional:55:0[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/tuple:832:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Elements ...> >& std::get(std::tuple<_Elements ...>&)
     get(tuple<_Elements...>& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:832:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::tuple<_Elements ...>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/functional:55:0[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/tuple:838:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Elements ...> >& std::get(const std::tuple<_Elements ...>&)
     get(const tuple<_Elements...>& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:838:5:[m[K [01;36m[Knote: [m[K  substitution of deduced template arguments resulted in errors seen above
[01m[K/usr/include/c++/5/tuple:844:5:[m[K [01;36m[Knote: [m[Kcandidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Elements ...> >&& std::get(std::tuple<_Elements ...>&&)
     get(tuple<_Elements...>&& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:844:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:251:74:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::tuple<_Elements ...>[m[Kâ€™ and â€˜[01m[Kconst value_type {aka const std::tuple<Eigen::Matrix<double, 2, 1, 0, 2, 1>, double, Eigen::Matrix<double, 2, 1, 0, 2, 1> >}[m[Kâ€™ have incompatible cv-qualifiers
             averageopticalflow += std::get<3>(candidate_info[candidate_i]);
[01;32m[K                                                                          ^[m[K
In file included from [01m[K/usr/include/c++/5/functional:55:0[m[K,
                 from [01m[K/usr/include/c++/5/memory:79[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/ceres/Map.hpp:42[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/include/okvis/dynenv/cluster.hpp:4[m[K,
                 from [01m[K/home/davencyw/catkinws/dynokvis/src/okvis_ros/okvis/okvis_ceres/src/cluster.cpp:1[m[K:
[01m[K/usr/include/c++/5/tuple:867:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::tuple<_Elements ...>&)
     get(tuple<_Types...>& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:867:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/tuple:873:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::tuple<_Elements ...>&&)
     get(tuple<_Types...>&& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:873:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/5/tuple:879:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::tuple<_Elements ...>&)
     get(const tuple<_Types...>& __t) noexcept
[01;32m[K     ^[m[K
[01m[K/usr/include/c++/5/tuple:879:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
make[2]: *** [okvis/okvis_ceres/CMakeFiles/okvis_ceres.dir/src/cluster.cpp.o] Error 1
make[1]: *** [okvis/okvis_ceres/CMakeFiles/okvis_ceres.dir/all] Error 2
make: *** [all] Error 2
